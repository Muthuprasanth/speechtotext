{"version":3,"sources":["wizards/siteUrl.ts"],"names":[],"mappings":";;AAAA,qCAAqC;AAKrC,MAAM,MAAM,GAAG,CAAC,WAAyB,EAAE,aAA+B,EAAE,EAAE,WAAgC,EAAE,EAA6B,EAAE;IAC7I,IAAI,SAAS,GAAwB,EAAE,CAAC;IAGxC,SAAS,GAAG,CAAC;YACX,IAAI,EAAE,SAAS;YACf,OAAO,EAAE,gBAAgB;YACzB,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,WAAW,CAAC,OAAO;YAC5B,QAAQ,EAAE,CAAC,MAAc,EAAE,EAAE;gBAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxB,MAAM,CAAC,KAAK,CAAC;gBACf,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;SACF,CAAC,CAAC;IAEH,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAChB,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;SAC9B,IAAI,CAAC,CAAC,OAAyB,EAAE,EAAE;QAClC,MAAM,mBACD,UAAU,EACV,OAAO,EACV;IACJ,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAEF,kBAAe,MAAM,CAAC","file":"siteUrl.js","sourcesContent":["import * as inquirer from 'inquirer';\r\n\r\nimport { IOnPremiseAddinCredentials } from 'node-sp-auth';\r\nimport { IAuthContext, IAuthConfigSettings } from '../interfaces';\r\n\r\nconst wizard = (authContext: IAuthContext, answersAll: inquirer.Answers = {}, settings: IAuthConfigSettings = {}): Promise<inquirer.Answers> => {\r\n  let promptFor: inquirer.Question[] = [];\r\n\r\n  // Require SharePoint URL\r\n  promptFor = [{\r\n    name: 'siteUrl',\r\n    message: 'SharePoint URL',\r\n    type: 'string',\r\n    default: authContext.siteUrl,\r\n    validate: (answer: string) => {\r\n      if (answer.length === 0) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n  }];\r\n\r\n  console.log('');\r\n  return inquirer.prompt(promptFor)\r\n    .then((answers: inquirer.Answers) => {\r\n      return {\r\n        ...answersAll,\r\n        ...answers\r\n      };\r\n    });\r\n};\r\n\r\nexport default wizard;\r\n"]}