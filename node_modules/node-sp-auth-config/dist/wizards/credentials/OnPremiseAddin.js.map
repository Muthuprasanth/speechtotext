{"version":3,"sources":["wizards/credentials/OnPremiseAddin.ts"],"names":[],"mappings":";;AAAA,qCAAqC;AAKrC,MAAM,MAAM,GAAG,CAAC,WAAyB,EAAE,aAA+B,EAAE,EAAE,WAAgC,EAAE,EAA6B,EAAE;IAC7I,IAAI,yBAAyB,GAAgC,WAAW,CAAC,WAA0C,CAAC;IACpH,IAAI,SAAS,GAAwB;QACnC;YACE,IAAI,EAAE,UAAU;YAChB,OAAO,EAAE,UAAU;YACnB,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,yBAAyB,CAAC,QAAQ;YAC3C,QAAQ,EAAE,CAAC,MAAc,EAAE,EAAE;gBAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxB,MAAM,CAAC,KAAK,CAAC;gBACf,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;SACF,EAAE;YACD,IAAI,EAAE,UAAU;YAChB,OAAO,EAAE,UAAU;YACnB,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,yBAAyB,CAAC,QAAQ;YAC3C,QAAQ,EAAE,CAAC,MAAc,EAAE,EAAE;gBAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxB,MAAM,CAAC,KAAK,CAAC;gBACf,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;SACF,EAAE;YACD,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,OAAO;YAChB,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,yBAAyB,CAAC,KAAK;YACxC,QAAQ,EAAE,CAAC,MAAc,EAAE,EAAE;gBAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxB,MAAM,CAAC,KAAK,CAAC;gBACf,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;SACF,EAAE;YACD,IAAI,EAAE,mBAAmB;YACzB,OAAO,EAAE,mBAAmB;YAC5B,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,yBAAyB,CAAC,iBAAiB;YACpD,QAAQ,EAAE,CAAC,MAAc,EAAE,EAAE;gBAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxB,MAAM,CAAC,KAAK,CAAC;gBACf,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;SACF,EAAE;YACD,IAAI,EAAE,eAAe;YACrB,OAAO,EAAE,eAAe;YACxB,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,yBAAyB,CAAC,aAAa;YAChD,QAAQ,EAAE,CAAC,MAAc,EAAE,EAAE;gBAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxB,MAAM,CAAC,KAAK,CAAC;gBACf,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;SACF;KACF,CAAC;IACF,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;SAC9B,IAAI,CAAC,CAAC,OAAyB,EAAE,EAAE;QAClC,MAAM,mBACD,UAAU,EACV,OAAO,EACV;IACJ,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAEF,kBAAe,MAAM,CAAC","file":"OnPremiseAddin.js","sourcesContent":["import * as inquirer from 'inquirer';\r\n\r\nimport { IOnPremiseAddinCredentials } from 'node-sp-auth';\r\nimport { IAuthContext, IAuthConfigSettings } from '../../interfaces';\r\n\r\nconst wizard = (authContext: IAuthContext, answersAll: inquirer.Answers = {}, settings: IAuthConfigSettings = {}): Promise<inquirer.Answers> => {\r\n  let onPremiseAddinCredentials: IOnPremiseAddinCredentials = (authContext.authOptions as IOnPremiseAddinCredentials);\r\n  let promptFor: inquirer.Question[] = [\r\n    {\r\n      name: 'clientId',\r\n      message: 'clientId',\r\n      type: 'input',\r\n      default: onPremiseAddinCredentials.clientId,\r\n      validate: (answer: string) => {\r\n        if (answer.length === 0) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n    }, {\r\n      name: 'issuerId',\r\n      message: 'issuerId',\r\n      type: 'input',\r\n      default: onPremiseAddinCredentials.issuerId,\r\n      validate: (answer: string) => {\r\n        if (answer.length === 0) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n    }, {\r\n      name: 'realm',\r\n      message: 'realm',\r\n      type: 'input',\r\n      default: onPremiseAddinCredentials.realm,\r\n      validate: (answer: string) => {\r\n        if (answer.length === 0) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n    }, {\r\n      name: 'rsaPrivateKeyPath',\r\n      message: 'rsaPrivateKeyPath',\r\n      type: 'input',\r\n      default: onPremiseAddinCredentials.rsaPrivateKeyPath,\r\n      validate: (answer: string) => {\r\n        if (answer.length === 0) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n    }, {\r\n      name: 'shaThumbprint',\r\n      message: 'shaThumbprint',\r\n      type: 'input',\r\n      default: onPremiseAddinCredentials.shaThumbprint,\r\n      validate: (answer: string) => {\r\n        if (answer.length === 0) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n  ];\r\n  return inquirer.prompt(promptFor)\r\n    .then((answers: inquirer.Answers) => {\r\n      return {\r\n        ...answersAll,\r\n        ...answers\r\n      };\r\n    });\r\n};\r\n\r\nexport default wizard;\r\n"]}