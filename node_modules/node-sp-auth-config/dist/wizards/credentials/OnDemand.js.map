{"version":3,"sources":["wizards/credentials/OnDemand.ts"],"names":[],"mappings":";;AAAA,qCAAqC;AAKrC,MAAM,MAAM,GAAG,CAAC,WAAyB,EAAE,aAA+B,EAAE,EAAE,WAAgC,EAAE,EAA6B,EAAE;IAC7I,IAAI,sBAAsB,GAA0B,WAAW,CAAC,WAAoC,CAAC;IACrG,IAAI,SAAS,GAAwB,EAAE,CAAC;IACxC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;SAC9B,IAAI,CAAC,CAAC,OAAyB,EAAE,EAAE;QAClC,MAAM,mBACD,UAAU,EACV;YACD,QAAQ,EAAE,IAAI;SACf,EACD;IACJ,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAEF,kBAAe,MAAM,CAAC","file":"OnDemand.js","sourcesContent":["import * as inquirer from 'inquirer';\r\n\r\nimport { IOnDemandCredentials } from 'node-sp-auth';\r\nimport { IAuthContext, IAuthConfigSettings } from '../../interfaces';\r\n\r\nconst wizard = (authContext: IAuthContext, answersAll: inquirer.Answers = {}, settings: IAuthConfigSettings = {}): Promise<inquirer.Answers> => {\r\n  let onlineAddinCredentials: IOnDemandCredentials = (authContext.authOptions as IOnDemandCredentials);\r\n  let promptFor: inquirer.Question[] = [];\r\n  return inquirer.prompt(promptFor)\r\n    .then((answers: inquirer.Answers) => {\r\n      return {\r\n        ...answersAll,\r\n        ...{\r\n          ondemand: true\r\n        }\r\n      };\r\n    });\r\n};\r\n\r\nexport default wizard;\r\n"]}