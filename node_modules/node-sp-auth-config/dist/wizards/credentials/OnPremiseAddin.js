"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const inquirer = require("inquirer");
const wizard = (authContext, answersAll = {}, settings = {}) => {
    let onPremiseAddinCredentials = authContext.authOptions;
    let promptFor = [
        {
            name: 'clientId',
            message: 'clientId',
            type: 'input',
            default: onPremiseAddinCredentials.clientId,
            validate: (answer) => {
                if (answer.length === 0) {
                    return false;
                }
                return true;
            }
        }, {
            name: 'issuerId',
            message: 'issuerId',
            type: 'input',
            default: onPremiseAddinCredentials.issuerId,
            validate: (answer) => {
                if (answer.length === 0) {
                    return false;
                }
                return true;
            }
        }, {
            name: 'realm',
            message: 'realm',
            type: 'input',
            default: onPremiseAddinCredentials.realm,
            validate: (answer) => {
                if (answer.length === 0) {
                    return false;
                }
                return true;
            }
        }, {
            name: 'rsaPrivateKeyPath',
            message: 'rsaPrivateKeyPath',
            type: 'input',
            default: onPremiseAddinCredentials.rsaPrivateKeyPath,
            validate: (answer) => {
                if (answer.length === 0) {
                    return false;
                }
                return true;
            }
        }, {
            name: 'shaThumbprint',
            message: 'shaThumbprint',
            type: 'input',
            default: onPremiseAddinCredentials.shaThumbprint,
            validate: (answer) => {
                if (answer.length === 0) {
                    return false;
                }
                return true;
            }
        }
    ];
    return inquirer.prompt(promptFor)
        .then((answers) => {
        return Object.assign({}, answersAll, answers);
    });
};
exports.default = wizard;

//# sourceMappingURL=OnPremiseAddin.js.map
